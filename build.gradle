plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.5-SNAPSHOT" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings loom.officialMojangMappings()
        // The following line declares the yarn mappings you may select this one as well.
        // mappings "net.fabricmc:yarn:@YARN_MAPPINGS@:v2"
    }
}

def getAppVersion = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'tag', '--points-at', 'HEAD'
            standardOutput = stdout
        }
        def tag = stdout.toString().trim()
        if (tag.isEmpty()) {
            return rootProject.minecraft_version + "-SNAPSHOT"
        }
        return tag
    } catch (Exception e) {
        println "Warning: ${e.message}, is git installed?"
        return rootProject.minecraft_version + "-DEV"
    }
} as Object

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = getAppVersion()
    group = rootProject.group_id

    repositories {
        maven { url "https://maven.conczin.net/Artifacts" }
        maven { url "https://maven.terraformersmc.com/releases/" }
        maven { url = "https://dvs1.progwml6.com/files/maven/" }
        maven { url "<https://maven.shedaniel.me/>" }
        maven { url "<https://maven.architectury.dev/>" }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url "https://nexus.resourcefulbees.com/repository/maven-public/" }
        maven { url "https://maven.teamresourceful.com/repository/maven-public/" }
        maven { url "https://cursemaven.com" }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release.set(17)
    }

    java {
        withSourcesJar()
    }

    publishing {
        repositories {
            maven {
                name = "reposiliteRepository"
                url = uri("https://maven.conczin.net/Artifacts")
                credentials {
                    username = System.getenv("MAVEN_USERNAME")
                    password = System.getenv("MAVEN_TOKEN")
                }
            }
        }
    }

    def exclusionPatterns = ['**/*.aup3', '**/.xdp-*', '**/*.kra', '**/*~*']
    processResources {
        exclusionPatterns.each { pattern ->
            exclude pattern
        }
    }
    sourcesJar {
        exclusionPatterns.each { pattern ->
            exclude pattern
        }
    }
}
